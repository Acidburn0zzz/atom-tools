#!/usr/bin/ruby

=begin
Usage: atom-cp [options] source destination
    copy the contents of an Atom Collection

    'source' and 'destination' can be a path on the local filesystem, the
  URL of an Atom Collection or '-' for stdin/stdout
=end

require 'atom/tools'
include Atom::Tools

def parse_options
  options = { :complete => true }

  opts = OptionParser.new do |opts|
    opts.banner = <<END
Usage: #{$0} [options] source destination
    copy an Atom Collection

    'source' and 'destination' can be a path on the local filesystem, the
  URL of an Atom Collection or '-' for stdin/stdout

END

    opts.on('-c', '--no-complete', "Don't follow previous and next links in the source feed") do
     options[:complete] = false
    end
    opts.on('-s', '--infer-slugs', 'Try to infer entry slugs') { options[:infer_slugs] = true }

    # XXX fetch each entry

    atom_options opts, options
  end

  opts.parse!(ARGV)

  if ARGV.length < 2
    puts opts
    exit
  end

  options
end

def infer_slug entry
  slug = nil
  alt = e.links.find { |l| l['rel'] == 'alternate' }

  alt and alt['href'].split('/').last
end

if __FILE__ == $0
  require 'optparse'

  options = parse_options

  source = ARGV[0]
  dest = ARGV[1]

  feed = parse_input source, options

  if options[:verbose]
    feed.each do |slug,entry|
      print "got #{entry.title}  "
      puts "(/#{slug})"
    end
  end

  if options[:infer_slugs]
    feed.map! do |slug,entry|
      slug ||= infer_slug entry

      [slug, entry]
    end
  end

  write_output feed, dest, options
end
