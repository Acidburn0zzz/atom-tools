#!/usr/bin/ruby

require 'atom/collection'

def get_http
  Atom::HTTP.new
end

def slug_etc_from feed
  feed.entries.map do |e|
    slug = nil
    alt = e.links.find { |l| l['rel'] == 'alternate' }

    if alt
      slug = alt['href'].split('/').last
    end

    [slug, e]
  end
end

def http_to_feed url
  feed = Atom::Feed.new url, get_http
  feed.update!

  slug_etc_from feed
end

def dir_to_feed path
  Dir[path+'/*.atom'].map do |e|
    slug = e.match(/.*\/(.*)\.atom/)[1]
    slug = nil if slug and slug.match /^0x/

    entry = Atom::Entry.parse(File.read(e))

    [slug, entry]
  end
end

def stdin_to_feed
  feed = Atom::Feed.parse $stdin

  slug_etc_from feed
end

def feed_to_http feed, url
  coll = Atom::Collection.new url, get_http

  feed.each do |slug,entry|
    coll.post! entry, slug
  end
end

def feed_to_dir feed, path
  if File.exists? path
    raise "directory #{path} already exists"
  else
    Dir.mkdir path
  end

  feed.each do |slug,entry|
    e = entry.to_s

    new_filename = if slug
                     path + '/' + slug + '.atom'
                   else
                     path + '/0x' + MD5.new(e).hexdigest[0,8] + '.atom'
                   end

    File.open(new_filename, 'w') { |f| f.write e }
  end
end

if ARGV.length < 2
  $stderr.puts "Usage: #{$0} [source] [destination]"
  exit
end

source = ARGV[0]
dest = ARGV[1]

# do stdin/stdout

if source.match /^http/
  feed = http_to_feed source
elsif source == '-'
  feed = stdin_to_feed
else
  feed = dir_to_feed source
end

if dest.match /^http/
  feed_to_http feed, dest
elsif dest == '-'
  f = Atom::Feed.new

  feed.each do |slug,entry|
    f.entries << entry
  end

  puts f.to_s
else
  feed_to_dir feed, dest
end
